import axios from 'axios';

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä
const api = axios.create({
  baseURL: '/api', // —É–∫–∞–∂–∏ —Å–≤–æ–π –±–∞–∑–æ–≤—ã–π URL, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
});

// üëâ –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// üëâ –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ 401)
api.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response?.status === 401) {
      // –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—å –Ω–∞ /login
      localStorage.removeItem('token');
      window.location.href = '/login';
    }
    return Promise.reject(error);
  }
);

export default api;